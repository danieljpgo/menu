datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  notes    Note[]
  Recipe   Recipe[]
  Menu     Menu[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Recipe {
  id          String             @id @default(cuid())
  name        String
  description String
  ingredients RecipeIngredient[]

  Menu   Menu?   @relation(fields: [menuId], references: [id])
  menuId String?

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model RecipeIngredient {
  id           String     @id @default(cuid())
  amount       Int
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  ingredientId String
  Recipe       Recipe?    @relation(fields: [recipeId], references: [id])
  recipeId     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Ingredient {
  id               String             @id @default(cuid())
  name             String
  unit             String
  RecipeIngredient RecipeIngredient[]
}

model Menu {
  id String @id @default(cuid())

  name        String
  description String
  recipes     Recipe[]

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
